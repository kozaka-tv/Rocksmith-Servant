name: Build-All-Platforms

on:
  push:
    branches: [ 'main' ]
    tags: # Added to trigger the workflow on version tags
      - 'v*'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest ]
        # Uncomment to add macOS and Ubuntu builds
        # os: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      # Check-out repository
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          architecture: 'x64'
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt

      # Install dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --user virtualenv
          virtualenv .venv
          . .venv/Scripts/activate
          pip install pyinstaller
          pip install -r requirements.txt
          # if the following part is separate build-step, pyinstaller is not recognized.
          echo '===============BUILD==============='
          pyinstaller -y --onefile --hidden-import=yaml --hidden-import=yaml.loader --hidden-import=colorlog `
          --paths=.\.venv\Lib\site-packages\ --add-data "config/log_config.yaml;config" `
          --add-data "modules/database/create_table_songs.sql;modules/database" `
          --add-data "modules/database/create_table_songs_enhanced.sql;modules/database" `
          --distpath . run.py

      # Upload artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }} Build
          path: |
            *.exe

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Download artifacts from previous build steps
      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: Windows Build
          path: ./artifacts

      # Uncomment to download macOS and Linux artifacts
      # - name: Download macOS Artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: macos-latest Build
      #     path: ./artifacts
      #
      # - name: Download Linux Artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: ubuntu-latest Build
      #     path: ./artifacts

      # Log files after download
      - name: List files after download
        run: ls -R ./artifacts

      # Rename Windows artifact to a suitable name
      - name: Rename Windows artifact
        run: mv ./artifacts/run.exe ./artifacts/RocksmithServant-${{ github.ref_name }}.exe

      # Create a GitHub release
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ github.ref }}
          name: ${{ github.ref_name }}
          files: |
            ./artifacts/*.exe
            ./artifacts/*.bin
            ./artifacts/*.app
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
