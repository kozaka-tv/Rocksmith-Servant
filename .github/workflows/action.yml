name: Build-All-Platforms

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
    tags:      # Added to trigger the workflow on version tags
      - 'v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
#        os: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      # Check-out repository
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt

      # Install dependencies
      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      # Build python script into a stand-alone exe
      - uses: jimkring/python-script-to-exe@v0.2.0
        with:
          script-name: run.py
          onefile: true
          access-token: ${{ secrets.NUITKA_COMMERCIAL_ACCESS_TOKEN }}
          # macos-create-app-bundle: ${{ runner.os == 'macOS' }}

      # Uploads artifacts
      - name: "Upload Artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }} Build
          path: |
            build/*.exe
            build/*.bin
            build/*.app/**/*

  release:
    if: startsWith(github.ref, 'refs/tags/v')  # Ensures this job runs only for version tags
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Download artifacts from previous build steps
      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: Windows Build
          path: ./artifacts

#      - name: Download macOS Artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: macos-latest Build
#          path: ./artifacts
#
#      - name: Download Linux Artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: ubuntu-latest Build
#          path: ./artifacts

      # Log files after download
      - name: List files after download
        run: ls -R ./artifacts

      # Rename Windows artifact to a suitable name
      - name: Rename Windows artifact
        run: mv ./artifacts/run.exe ./artifacts/RocksmithServant-${{ github.ref_name }}.exe

      # Create a GitHub release using softprops/action-gh-release
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ github.ref }}
          name: ${{ github.ref_name }}
          files: |
            ./artifacts/*.exe
            ./artifacts/*.bin
            ./artifacts/*.app
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
